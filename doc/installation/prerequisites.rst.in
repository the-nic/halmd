.. _prerequisites:

Software prerequisites
**********************

.. toctree::
   :maxdepth: 1

   automatic
   manual

The following software packages are required for building HALMD. For an
automated installation procedure, refer to the next section, :ref:`automatic`.
A detailed step-by-step guide for manual installation is given in section
:ref:`manual`.


Build environment
-----------------

* a :ref:`C++ compiler <supported_compilers>` with sufficient C++11 support,
  e.g., GCC ≥ 4.6

  HALMD makes extensive use of C++11 features. Instructions for a
  semi-automated build of GCC are given in :ref:`automatic`.

* `CMake <http://www.cmake.org/>`_ ≥ 2.8.8 with a patch for
  `native CUDA support <https://github.com/halmd-org/cmake-cuda>`_

  The build process of HALMD depends on CMake, a cross-platform, open-source
  build system.

  .. note::

    The CMake-CUDA patch adds *native* CUDA source file compilation and linking
    support to CMake and is not to be confused nor compatible with the CUDA
    module in CMake 2.8.

    The patch is not needed for builds without GPU acceleration.

* `NVIDIA CUDA toolkit <http://www.nvidia.com/object/cuda_get.html>`_ ≥ 5.0

  Please refer to the installation instructions shipped with the toolkit. The
  toolkit is not needed for builds without GPU acceleration.


Third-party libraries
---------------------

* `Boost C++ Libraries <http://www.boost.org/>`_ ≥ 1.55.0

  The C++ part of HALMD uses libraries in the Boost C++ collection.

  .. note::

    System installations of the Boost C++ Libraries can not be used due to an
    ABI incompatibility (C++98 vs. C++11). For instructions how to build Boost
    C++ with the C++11 ABI, see :ref:`automatic`.

* `Lua interpreter <http://www.lua.org>`_ ≥ 5.1 *or* `Lua Just-In-Time compiler
  <http://luajit.org/luajit.html>`_ ≥ 2.0

  .. note::

    We recommend Lua 5.2 or later. The Lua JIT compiler is recommended for
    advanced simulation scripts containing loops, user-defined correlation
    functions, etc.

  A simulation with HALMD is setup and configured by means of the Lua scripting
  language. The fast and lightweight Lua interpreter is embedded in the HALMD
  executable.

* `HDF5 C++ Library <http://www.hdfgroup.org/HDF5/>`_ ≥ 1.8

  "HDF5 is a data model, library, and file format for storing and managing
  data. It supports an unlimited variety of datatypes, and is designed for
  flexible and efficient I/O and for high volume and complex data."


Documentation
-------------

Documentation is generated **optionally** in HTML and PDF format if these
prerequisites are met:

* `Sphinx documentation generator <http://sphinx.pocoo.org/>`_ ≥ 1.1

  "Sphinx is a tool that makes it easy to create intelligent and beautiful
  documentation."

* LaTeX including pdflatex and dvipng

* graphviz

